% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Quality-Control.R
\name{polyfit}
\alias{polyfit}
\title{Polynomial fitting for spectral baseline correction}
\usage{
polyfit(spectra, t, degree = 4, tol = 0.001, rep = 100)
}
\arguments{
\item{spectra}{A matrix of spectral data where each row represents a spectrum.}

\item{t}{A numeric vector of x-values for the polynomial fitting. If missing or FALSE,
a sequence from 1 to the number of columns in `spectra` is used.}

\item{degree}{The degree of the polynomial to fit.}

\item{tol}{The tolerance for convergence of the iterative fitting process.}

\item{rep}{The maximum number of iterations to perform.}
}
\value{
A list containing the baseline and the corrected spectra.
}
\description{
This function performs polynomial fitting to correct the baseline of spectral data.
It iteratively fits a polynomial to the data, ensuring that the fitted values
do not exceed the original data values.
}
\examples{
# Create sample spectral data
wavenumbers <- seq(400, 3200, by=10)
n_spectra <- 5
n_points <- length(wavenumbers)
spectra <- matrix(0, nrow=n_spectra, ncol=n_points)

# Add some peaks and baseline
for(i in 1:n_spectra) {
  # Add baseline drift
  spectra[i,] <- 0.001 * wavenumbers + rnorm(n_points, 0, 0.1)
  # Add peaks
  spectra[i, which.min(abs(wavenumbers-1000))] <- spectra[i, which.min(abs(wavenumbers-1000))] + 2
  spectra[i, which.min(abs(wavenumbers-1500))] <- spectra[i, which.min(abs(wavenumbers-1500))] + 1.5
}

}
