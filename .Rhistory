}
interpolation = FALSE
if (interpolation) {
wavenumber <- seq(cutoff[1], cutoff[2])
data_list <- parLapply(cl, filenames, function(x) {
read.single(x, wavenumber)
})
} else {
if(!is.na(filenames[1])&&filenames[1]!="")
wavenumber <- cut.spec(fread(filenames[1], header = FALSE, sep = "\t"), cutoff)$V1
else
return()
data_list <- parLapply(cl, filenames, function(x) {
cut.spec(fread(x, header = FALSE, sep = "\t"), cutoff)$V2
})
}
cutoff = c(500, 3150)
group.index = 1
group.levels = NULL
if (interpolation) {
wavenumber <- seq(cutoff[1], cutoff[2])
data_list <- parLapply(cl, filenames, function(x) {
read.single(x, wavenumber)
})
} else {
if(!is.na(filenames[1])&&filenames[1]!="")
wavenumber <- cut.spec(fread(filenames[1], header = FALSE, sep = "\t"), cutoff)$V1
else
return()
data_list <- parLapply(cl, filenames, function(x) {
cut.spec(fread(x, header = FALSE, sep = "\t"), cutoff)$V2
})
}
data_mat <- do.call(rbind, data_list)
data_list <- parLapply(cl, filenames, function(x) {
cut.spec(fread(x, header = FALSE, sep = "\t"), cutoff)$V2
})
clusterExport(cl, varlist = c( "read.single", "cut.spec"))
if (interpolation) {
wavenumber <- seq(cutoff[1], cutoff[2])
data_list <- parLapply(cl, filenames, function(x) {
read.single(x, wavenumber)
})
} else {
if(!is.na(filenames[1])&&filenames[1]!="")
wavenumber <- cut.spec(fread(filenames[1], header = FALSE, sep = "\t"), cutoff)$V1
else
return()
data_list <- parLapply(cl, filenames, function(x) {
cut.spec(fread(x, header = FALSE, sep = "\t"), cutoff)$V2
})
}
num_files <- length(filenames)
num_cores <- detectCores()-1
cl <- makeCluster(num_cores)
clusterEvalQ(cl, {
library(data.table)
library(stringr)
})
clusterExport(cl, varlist = c( "read.single", "cut.spec"))
if (interpolation) {
wavenumber <- seq(cutoff[1], cutoff[2])
data_list <- parLapply(cl, filenames, function(x) {
read.single(x, wavenumber)
})
} else {
if(!is.na(filenames[1])&&filenames[1]!="")
wavenumber <- cut.spec(fread(filenames[1], header = FALSE, sep = "\t"), cutoff)$V1
else
return()
data_list <- parLapply(cl, filenames, function(x) {
cut.spec(fread(x, header = FALSE, sep = "\t"), cutoff)$V2
})
}
read.spec("/Users/jinggc/Documents/RamEx/inst/extdata")
data_name <- "RamEx_data"
data_file <- system.file("extdata", "data", package = RamEX)
data_name <- "RamEx_data"
data_file <- system.file("extdata", "data", package = "RamEx")
if (file.exists(data_file)) {
assign(data_name, read.spec.load(data_file), envir = .GlobalEnv)
} else {
warning("Data file not found.")
}
devtools::document()
devtools::document()
data <- RamEx_data
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
library(dplyr)
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
data <- data[qc_jump(data@datasets$normalized.data)$index_good,]
devtools::document()
data <- RamEx_data
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
kernel_ori <- matrix(c(-1,-1,-1, -1,-1,-1, -1,-1,-1, -1,-1,
-1,-1,-1, -1,-1,33, -1,-1,-1, -1,-1,
-1,-1,-1, -1,-1,-1, -1,-1,-1, -1,-1),nrow = 3)
t(apply(kernel_ori, c(1, 2), rep))
kernel_ori <- matrix(rep(kernel_ori, each = 33), nrow = 3, byrow = TRUE)
kernel_matrix <- kernel_ori %*% matrix(1, nrow = 1, ncol = 3 * 11)
kernel_ori <- matrix(rep(kernel_ori, each = 33), nrow = 3, byrow = TRUE)
kernel_matrix <- kernel_ori %*% matrix(1, nrow = 1, ncol = ncol(kernel_ori))
kernel_ori <- matrix(c(-1,-1,-1, -1,-1,-1, -1,-1,-1, -1,-1,
-1,-1,-1, -1,33,-1, -1,-1,-1, -1,-1,
-1,-1,-1, -1,-1,-1, -1,-1,-1, -1,-1), nrow = 3, byrow = TRUE)
# 将 kernel_ori 的每个元素重复 33 次（因为 3 * 11 = 33）
kernel_repeated <- matrix(rep(kernel_ori, each = 33), nrow = 3, byrow = TRUE)
# 创建一个全1的列向量，长度与 kernel_repeated 的列数相同
ones_vector <- matrix(1, nrow = 1, ncol = ncol(kernel_repeated))
# 进行矩阵乘法
result <- kernel_repeated %*% t(ones_vector)
kernel_repeated <- matrix(rep(kernel_ori, each = 33), nrow = 3, byrow = TRUE)
ones_vector <- matrix(1, nrow = 1, ncol = ncol(kernel_repeated))
kernel_matrix <- kernel_repeated %*% t(ones_vector)
conv_result <- vector_result %*% kernel_matrix
devtools::document()
data <- RamEx_data
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
devtools::document()
data <- RamEx_data
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
devtools::document()
data <- RamEx_data
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
devtools::document()
data <- RamEx_data
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
devtools::document()
data <- RamEx_data
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
devtools::document()
data <- RamEx_data
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
data <- RamEx_data
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
devtools::document()
data <- RamEx_data
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data <- RamEx_data
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
devtools::document()
data <- RamEx_data
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
devtools::document()
data <- RamEx_data
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
devtools::document()
data <- RamEx_data
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
devtools::document()
data <- RamEx_data
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
devtools::document()
data <- RamEx_data
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
devtools::document()
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
devtools::document()
data <- RamEx_data
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
data <- RamEx_data
devtools::document()
data <- RamEx_data
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
devtools::document()
data <- RamEx_data
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
devtools::document()
data <- RamEx_data
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
devtools::document()
data <- RamEx_data
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
devtools::document()
data <- RamEx_data
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
devtools::document()
data <- RamEx_data
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
1213*797
data <- RamEx_data
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
data <- RamEx_data
devtools::document()
data <- RamEx_data
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
devtools::document()
data <- RamEx_data
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
data、
data
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
reductions.umap(data)
devtools::document()
data <- RamEx_data
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
reductions.umap(data)
devtools::document()
data <- RamEx_data
data <- RamEx_data
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
reductions.umap(data)
data <- readRDS("/Users/jinggc/Desktop/data_27W_raw.rds")
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data <- readRDS("/Users/jinggc/Desktop/data_27W_raw.rds")
data %<>% pre.spike()
library("dplyr")
data %<>% pre.spike()
pre.spike(data)
help(uwot::umap)
help(umap)
devtools::document()
devtools::document()
data <- RamEx_data
data <- RamEx_data
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
devtools::document()
data <- RamEx_data
warnings()
data %<>%  pre.smooth.sg %>% pre.baseline.polyfit %>% pre.normalize.ch
data@datasets <- list(data= data@datasets$normalized.data)
data %<>% pre.spike  %>% pre.normalize.ch
data
data <- data[qc_jump(data@datasets$normalized.data)$index_good,]
reductions.umap(data, draw = T)
reduction.tsne(data, draw=T)
reductions.tsne()
reductions.tsne(data, draw=T)
data <- readRDS('/Users/jinggc/Desktop/data_27W_raw.rds')
data <- data[sample(1:277945, 10000),]
data <- readRDS('/Users/jinggc/Desktop/data_27W_raw.rds')
View(data)
data <- data[sample(1:277945, 10000),]
View(data)
View(data)
View(data)
View(data)
View(data)
View(data)
time_ramex <- readRDS('/Users/jinggc/Desktop/time_total.rds')
mem_ramex <- readRDS('/Users/jinggc/Desktop/mem_total.rds')
View(mem_ramex)
View(mem_ramex)
View(time_ramex)
View(time_ramex)
library(MLmetrics)
library(MLmetrics)
library(MLmetrics)
library(MLmetrics)
library(MLmetrics,quietly = TRUE)
library(circlize)
library(data.table)
library(data.table)
gc()
library(circlize)
library(data.table)
devtools::document()
devtools::document()
devtools::document()
install.packages(corr2D)
install.packages("corr2D")
install.packages("corr2D")
install.packages("corr2D", version = "1.0.2")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
RamEx_data <- Preprocesssing.Smooth.Sg(RamEx_data)
RamEx_data <- Preprocesssing.baseline.polyfit(RamEx_data)
RamEx_data <- Preprocesssing.Normalize(RamEx_data,"ch")
RamEx_data_index <- Qualitycontrol.ICOD(RamEx_data@datasets$normalized.data,var_tol = 0.4)
RamEx_data <- RamEx_data[RamEx_data_index$index_good]
Classification.Gmm(RamEx_data)
Classification.Gmm(RamEx_data)
library(mclust)
Classification.Gmm(RamEx_data)
Classification.Gmm(RamEx_data)
Classification.Lda(RamEx_data)
Classification.Rf(RamEx_data)
Feature.Reduction.Intensity(RamEx_data)
Feature.Reduction.Pca(RamEx_data)
Feature.Reduction.Pcoa(RamEx_data)
library(ade4)
install.packages(ade4)
install.packages("ade4")
library(ade4)
Feature.Reduction.Pcoa(RamEx_data)
Feature.Reduction.Tsne(RamEx_data)
Feature.Reduction.Umap(RamEx_data)
Intraramanome.Analysis.Irca.Global(RamEx_data)
Intraramanome.Analysis.Irca.Local(RamEx_data)
Intraramanome.Analysis.2Dcos(RamEx_data)
library(corr2D)
Intraramanome.Analysis.2Dcos(RamEx_data)
Intraramanome.Analysis.Irca.Local(RamEx_data)
Qualitycontrol.Dis(RamEx_data)
Qualitycontrol.Pls(RamEx_data)
Quantification.Glm(RamEx_data)
Quantification.Mlr(RamEx_data)
Quantification.Pls(RamEx_data)
Phenotype.Analysis.Kmeans(RamEx_data)
Phenotype.Analysis.Louvaincluster(RamEx_data)
library(RcppAnnoy)
Phenotype.Analysis.Louvaincluster(RamEx_data)
Phenotype.Analysis.Louvaincluster(RamEx_data)
library(foreach)
Phenotype.Analysis.Louvaincluster(RamEx_data)
Phenotype.Analysis.Hca(RamEx_data)
Raman.Markers.Correlations()
Raman.Markers.Rbcs(RamEx_data)
Raman.Markers.Roc()
Spectral.Decomposition.Ica(RamEx_data,2)
Spectral.Decomposition.Mcrals(RamEx_data,2)
Spectral.Decomposition.Nmf(RamEx_data)
devtools::document()
Spectral.Decomposition.Nmf(RamEx_data)
Raman.Markers.Rbcs(RamEx_data)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
Raman.Markers.Rbcs(RamEx_data)
library(dplyr)
Raman.Markers.Rbcs(RamEx_data)
library(magrittr)
Raman.Markers.Rbcs(RamEx_data)
devtools::document()
Raman.Markers.Rbcs(RamEx_data)
Spectral.Decomposition.Nmf(RamEx_data)
Spectral.Decomposition.Mcrals(RamEx_data,2)
Quantification.Pls(RamEx_data)
Quantification.Glm(RamEx_data)
Quantification.Pls(RamEx_data)
Quantification.Mlr(RamEx_data)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
pkgload::dev_help('Preprocesssing.Background.Spike')
devtools::document()
devtools::document()
devtools::document()
devtools::document()
Classification.Gmm(RamEx_data)
Preprocesssing.Background.Spike(RamEx_data,"GPU")
devtools::document()
Preprocesssing.Background.Spike(RamEx_data,"GPU")
devtools::document()
Preprocesssing.Background.Spike(RamEx_data,"GPU")
devtools::document()
Preprocesssing.Background.Spike(RamEx_data,"GPU")
Preprocesssing.Background.Spike(RamEx_data)
Preprocesssing.Background.Spike(RamEx_data, "CPU")
Preprocesssing.Background.Spike(RamEx_data, "GPU")
devtools::document()
Preprocesssing.Background.Spike(RamEx_data, "GPU")
Preprocesssing.Background.Spike(RamEx_data, "GPU")
devtools::document()
Preprocesssing.Background.Spike(RamEx_data, "GPU")
devtools::document()
Preprocesssing.Background.Spike(RamEx_data, "GPU")
library(gpuR)
Preprocesssing.Background.Spike(RamEx_data, "GPU")
data <- get.nearest.dataset(object)
mat <- matrix(rnorm(16), 4, 4)
gmat <- as.gpuMatrix(mat)
library(gpuR)
gmat <- as.gpuMatrix(mat)
help("as.gpuMatrix")
gmat <- as.gpuMatrix(mat)
gmat <- as.gpuMatrix(mat)
gmat <- as.gpuMatrix(mat)
gmat <- as.gpuMatrix(mat)
gmat <- as.gpuMatrix(mat)
gmat <- as.gpuMatrix(mat)
gmat <- as.gpuMatrix(mat)
gmat <- as.gpuMatrix(mat)
gmat <- as.gpuMatrix(mat)
gmat <- as.gpuMatrix(mat)
gmat <- as.gpuMatrix(mat)
matrix(data, nrow = rows, ncol = cols)
gmat <- as.gpuMatrix(mat)
kernel_ori <- matrix(c(-1,-1,-1, -1,-1,-1, -1,-1,-1, -1,-1,
-1,-1,-1, -1,-1,33, -1,-1,-1, -1,-1,
-1,-1,-1, -1,-1,-1, -1,-1,-1, -1,-1),nrow = 3, byrow = TRUE)
kernel_matrix <- as.vector(t(kernel_ori))
as.gpuVector(kernel_matrix)
library(gpuR)
as.gpuVector(kernel_matrix)
devtools::document()
Preprocesssing.Background.Spike(RamEx_data, "GPU")
Preprocesssing.Background.Spike(RamEx_data, "GPU")
devtools::document()
Preprocesssing.Background.Spike(RamEx_data, "GPU")
devtools::document()
Preprocesssing.Background.Spike(RamEx_data, "GPU")
Preprocesssing.Background.Spike(RamEx_data, "GPU")
devtools::document()
Preprocesssing.Background.Spike(RamEx_data, "GPU")
help("gpuMatrix")
Preprocesssing.Background.Spike(RamEx_data, "GPU")
devtools::document()
Preprocesssing.Background.Spike(RamEx_data, "GPU")
devtools::document()
Preprocesssing.Background.Spike(RamEx_data, "GPU")
devtools::document()
Preprocesssing.Background.Spike(RamEx_data, "GPU")
else{
devtools::document()
Preprocesssing.Background.Spike(RamEx_data, "GPU")
devtools::document()
Preprocesssing.Background.Spike(RamEx_data, "GPU")
devtools::document()
Preprocesssing.Background.Spike(RamEx_data, "GPU")
Preprocesssing.Background.Spike(RamEx_data, "CPU")
conv_result <-  kernel_matrix %*% vector_result
devtools::document()
Preprocesssing.Background.Spike(RamEx_data, "CPU")
devtools::document()
Preprocesssing.Background.Spike(RamEx_data, "CPU")
Preprocesssing.Background.Spike(RamEx_data, "CPU")
devtools::document()
Preprocesssing.Background.Spike(RamEx_data, "CPU")
kernel_ori <- matrix(c(-1,-1,-1, -1,-1,-1, -1,-1,-1, -1,-1,
-1,-1,-1, -1,-1,33, -1,-1,-1, -1,-1,
-1,-1,-1, -1,-1,-1, -1,-1,-1, -1,-1),nrow = 3, byrow = TRUE)
kernel_matrix <- as.vector(t(kernel_ori))
kernel_matrix
dim(kernel_matrix)
class(kernel_matrix)
dim(kernel_matrix)
devtools::document()
Preprocesssing.Background.Spike(RamEx_data, "CPU")
data <- matrix(rnorm(1e7), ncol = 1000)
data_gpu <- gpuMatrix(data, type = "float")
print(data_gpu[1.2])
print(data_gpu[1,22])
devtools::document()
Preprocesssing.Background.Spike(RamEx_data, "CPU")
Preprocesssing.Background.Spike(RamEx_data, "GPU")
